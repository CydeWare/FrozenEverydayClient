{"ast":null,"code":"import * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes, getDisplayName } from '@mui/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport makeStyles from \"../makeStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (!fields.includes(prop)) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\n// styled-components's API removes the mapping between components and styles.\n// Using components as a low-level styling construct can be simpler.\nexport default function styled(Component) {\n  const componentCreator = function (style) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      name,\n      ...stylesOptions\n    } = options;\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n    let classNamePrefix = name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\n      root: props => style({\n        theme,\n        ...props\n      })\n    }) : {\n      root: style\n    };\n    const useStyles = makeStyles(stylesOrCreator, {\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix,\n      ...stylesOptions\n    });\n    let filterProps;\n    let propTypes = {};\n    if (style.filterProps) {\n      filterProps = style.filterProps;\n      delete style.filterProps;\n    }\n\n    /* eslint-disable react/forbid-foreign-prop-types */\n    if (style.propTypes) {\n      propTypes = style.propTypes;\n      delete style.propTypes;\n    }\n    /* eslint-enable react/forbid-foreign-prop-types */\n\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\n      const {\n        children,\n        className: classNameProp,\n        clone,\n        component: ComponentProp,\n        ...other\n      } = props;\n      const classes = useStyles(props);\n      const className = clsx(classes.root, classNameProp);\n      let spread = other;\n      if (filterProps) {\n        spread = omit(spread, filterProps);\n      }\n      if (clone) {\n        return /*#__PURE__*/React.cloneElement(children, {\n          className: clsx(children.props.className, className),\n          ...spread\n        });\n      }\n      if (typeof children === 'function') {\n        return children({\n          className,\n          ...spread\n        });\n      }\n      const FinalComponent = ComponentProp || Component;\n      return /*#__PURE__*/_jsx(FinalComponent, {\n        ref: ref,\n        className: className,\n        ...spread,\n        children: children\n      });\n    });\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = {\n      /**\r\n       * A render function or node.\r\n       */\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      /**\r\n       * @ignore\r\n       */\n      className: PropTypes.string,\n      /**\r\n       * If `true`, the component will recycle it's children HTML element.\r\n       * It's using `React.cloneElement` internally.\r\n       *\r\n       * This prop will be deprecated and removed in v5\r\n       */\n      clone: chainPropTypes(PropTypes.bool, props => {\n        if (props.clone && props.component) {\n          return new Error('You can not use the clone and component prop at the same time.');\n        }\n        return null;\n      }),\n      /**\r\n       * The component used for the root node.\r\n       * Either a string to use a HTML element or a component.\r\n       */\n      component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\n      ...propTypes\n    } : void 0;\n    if (process.env.NODE_ENV !== 'production') {\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\n    }\n    hoistNonReactStatics(StyledComponent, Component);\n    return StyledComponent;\n  };\n  return componentCreator;\n}","map":{"version":3,"names":["React","clsx","PropTypes","chainPropTypes","getDisplayName","hoistNonReactStatics","makeStyles","jsx","_jsx","omit","input","fields","output","Object","keys","forEach","prop","includes","styled","Component","componentCreator","style","options","arguments","length","undefined","name","stylesOptions","process","env","NODE_ENV","Error","join","classNamePrefix","displayName","stylesOrCreator","theme","root","props","useStyles","filterProps","propTypes","StyledComponent","forwardRef","ref","children","className","classNameProp","clone","component","ComponentProp","other","classes","spread","cloneElement","FinalComponent","oneOfType","node","func","string","bool","elementType"],"sources":["C:/Users/Owner/FrozenEverydayClient/client/node_modules/@mui/styles/styled/styled.js"],"sourcesContent":["import * as React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { chainPropTypes, getDisplayName } from '@mui/utils';\r\nimport hoistNonReactStatics from 'hoist-non-react-statics';\r\nimport makeStyles from \"../makeStyles/index.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction omit(input, fields) {\r\n  const output = {};\r\n  Object.keys(input).forEach(prop => {\r\n    if (!fields.includes(prop)) {\r\n      output[prop] = input[prop];\r\n    }\r\n  });\r\n  return output;\r\n}\r\n\r\n// styled-components's API removes the mapping between components and styles.\r\n// Using components as a low-level styling construct can be simpler.\r\nexport default function styled(Component) {\r\n  const componentCreator = (style, options = {}) => {\r\n    const {\r\n      name,\r\n      ...stylesOptions\r\n    } = options;\r\n    if (process.env.NODE_ENV !== 'production' && Component === undefined) {\r\n      throw new Error(['You are calling styled(Component)(style) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\r\n    }\r\n    let classNamePrefix = name;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!name) {\r\n        // Provide a better DX outside production.\r\n        const displayName = getDisplayName(Component);\r\n        if (displayName !== undefined) {\r\n          classNamePrefix = displayName;\r\n        }\r\n      }\r\n    }\r\n    const stylesOrCreator = typeof style === 'function' ? theme => ({\r\n      root: props => style({\r\n        theme,\r\n        ...props\r\n      })\r\n    }) : {\r\n      root: style\r\n    };\r\n    const useStyles = makeStyles(stylesOrCreator, {\r\n      Component,\r\n      name: name || Component.displayName,\r\n      classNamePrefix,\r\n      ...stylesOptions\r\n    });\r\n    let filterProps;\r\n    let propTypes = {};\r\n    if (style.filterProps) {\r\n      filterProps = style.filterProps;\r\n      delete style.filterProps;\r\n    }\r\n\r\n    /* eslint-disable react/forbid-foreign-prop-types */\r\n    if (style.propTypes) {\r\n      propTypes = style.propTypes;\r\n      delete style.propTypes;\r\n    }\r\n    /* eslint-enable react/forbid-foreign-prop-types */\r\n\r\n    const StyledComponent = /*#__PURE__*/React.forwardRef(function StyledComponent(props, ref) {\r\n      const {\r\n        children,\r\n        className: classNameProp,\r\n        clone,\r\n        component: ComponentProp,\r\n        ...other\r\n      } = props;\r\n      const classes = useStyles(props);\r\n      const className = clsx(classes.root, classNameProp);\r\n      let spread = other;\r\n      if (filterProps) {\r\n        spread = omit(spread, filterProps);\r\n      }\r\n      if (clone) {\r\n        return /*#__PURE__*/React.cloneElement(children, {\r\n          className: clsx(children.props.className, className),\r\n          ...spread\r\n        });\r\n      }\r\n      if (typeof children === 'function') {\r\n        return children({\r\n          className,\r\n          ...spread\r\n        });\r\n      }\r\n      const FinalComponent = ComponentProp || Component;\r\n      return /*#__PURE__*/_jsx(FinalComponent, {\r\n        ref: ref,\r\n        className: className,\r\n        ...spread,\r\n        children: children\r\n      });\r\n    });\r\n    process.env.NODE_ENV !== \"production\" ? StyledComponent.propTypes = {\r\n      /**\r\n       * A render function or node.\r\n       */\r\n      children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\r\n      /**\r\n       * @ignore\r\n       */\r\n      className: PropTypes.string,\r\n      /**\r\n       * If `true`, the component will recycle it's children HTML element.\r\n       * It's using `React.cloneElement` internally.\r\n       *\r\n       * This prop will be deprecated and removed in v5\r\n       */\r\n      clone: chainPropTypes(PropTypes.bool, props => {\r\n        if (props.clone && props.component) {\r\n          return new Error('You can not use the clone and component prop at the same time.');\r\n        }\r\n        return null;\r\n      }),\r\n      /**\r\n       * The component used for the root node.\r\n       * Either a string to use a HTML element or a component.\r\n       */\r\n      component: PropTypes /* @typescript-to-proptypes-ignore */.elementType,\r\n      ...propTypes\r\n    } : void 0;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      StyledComponent.displayName = `Styled(${classNamePrefix})`;\r\n    }\r\n    hoistNonReactStatics(StyledComponent, Component);\r\n    return StyledComponent;\r\n  };\r\n  return componentCreator;\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,EAAEC,cAAc,QAAQ,YAAY;AAC3D,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAIA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC3B,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjBC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAACC,IAAI,IAAI;IACjC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAACD,IAAI,CAAC,EAAE;MAC1BJ,MAAM,CAACI,IAAI,CAAC,GAAGN,KAAK,CAACM,IAAI,CAAC;IAC5B;EACF,CAAC,CAAC;EACF,OAAOJ,MAAM;AACf;;AAEA;AACA;AACA,eAAe,SAASM,MAAMA,CAACC,SAAS,EAAE;EACxC,MAAMC,gBAAgB,GAAG,SAAAA,CAACC,KAAK,EAAmB;IAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC3C,MAAM;MACJG,IAAI;MACJ,GAAGC;IACL,CAAC,GAAGL,OAAO;IACX,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAIX,SAAS,KAAKM,SAAS,EAAE;MACpE,MAAM,IAAIM,KAAK,CAAC,CAAC,uEAAuE,EAAE,sCAAsC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/I;IACA,IAAIC,eAAe,GAAGP,IAAI;IAC1B,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAACJ,IAAI,EAAE;QACT;QACA,MAAMQ,WAAW,GAAG9B,cAAc,CAACe,SAAS,CAAC;QAC7C,IAAIe,WAAW,KAAKT,SAAS,EAAE;UAC7BQ,eAAe,GAAGC,WAAW;QAC/B;MACF;IACF;IACA,MAAMC,eAAe,GAAG,OAAOd,KAAK,KAAK,UAAU,GAAGe,KAAK,KAAK;MAC9DC,IAAI,EAAEC,KAAK,IAAIjB,KAAK,CAAC;QACnBe,KAAK;QACL,GAAGE;MACL,CAAC;IACH,CAAC,CAAC,GAAG;MACHD,IAAI,EAAEhB;IACR,CAAC;IACD,MAAMkB,SAAS,GAAGjC,UAAU,CAAC6B,eAAe,EAAE;MAC5ChB,SAAS;MACTO,IAAI,EAAEA,IAAI,IAAIP,SAAS,CAACe,WAAW;MACnCD,eAAe;MACf,GAAGN;IACL,CAAC,CAAC;IACF,IAAIa,WAAW;IACf,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,IAAIpB,KAAK,CAACmB,WAAW,EAAE;MACrBA,WAAW,GAAGnB,KAAK,CAACmB,WAAW;MAC/B,OAAOnB,KAAK,CAACmB,WAAW;IAC1B;;IAEA;IACA,IAAInB,KAAK,CAACoB,SAAS,EAAE;MACnBA,SAAS,GAAGpB,KAAK,CAACoB,SAAS;MAC3B,OAAOpB,KAAK,CAACoB,SAAS;IACxB;IACA;;IAEA,MAAMC,eAAe,GAAG,aAAa1C,KAAK,CAAC2C,UAAU,CAAC,SAASD,eAAeA,CAACJ,KAAK,EAAEM,GAAG,EAAE;MACzF,MAAM;QACJC,QAAQ;QACRC,SAAS,EAAEC,aAAa;QACxBC,KAAK;QACLC,SAAS,EAAEC,aAAa;QACxB,GAAGC;MACL,CAAC,GAAGb,KAAK;MACT,MAAMc,OAAO,GAAGb,SAAS,CAACD,KAAK,CAAC;MAChC,MAAMQ,SAAS,GAAG7C,IAAI,CAACmD,OAAO,CAACf,IAAI,EAAEU,aAAa,CAAC;MACnD,IAAIM,MAAM,GAAGF,KAAK;MAClB,IAAIX,WAAW,EAAE;QACfa,MAAM,GAAG5C,IAAI,CAAC4C,MAAM,EAAEb,WAAW,CAAC;MACpC;MACA,IAAIQ,KAAK,EAAE;QACT,OAAO,aAAahD,KAAK,CAACsD,YAAY,CAACT,QAAQ,EAAE;UAC/CC,SAAS,EAAE7C,IAAI,CAAC4C,QAAQ,CAACP,KAAK,CAACQ,SAAS,EAAEA,SAAS,CAAC;UACpD,GAAGO;QACL,CAAC,CAAC;MACJ;MACA,IAAI,OAAOR,QAAQ,KAAK,UAAU,EAAE;QAClC,OAAOA,QAAQ,CAAC;UACdC,SAAS;UACT,GAAGO;QACL,CAAC,CAAC;MACJ;MACA,MAAME,cAAc,GAAGL,aAAa,IAAI/B,SAAS;MACjD,OAAO,aAAaX,IAAI,CAAC+C,cAAc,EAAE;QACvCX,GAAG,EAAEA,GAAG;QACRE,SAAS,EAAEA,SAAS;QACpB,GAAGO,MAAM;QACTR,QAAQ,EAAEA;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFjB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGY,eAAe,CAACD,SAAS,GAAG;MAClE;AACN;AACA;MACMI,QAAQ,EAAE3C,SAAS,CAACsD,SAAS,CAAC,CAACtD,SAAS,CAACuD,IAAI,EAAEvD,SAAS,CAACwD,IAAI,CAAC,CAAC;MAC/D;AACN;AACA;MACMZ,SAAS,EAAE5C,SAAS,CAACyD,MAAM;MAC3B;AACN;AACA;AACA;AACA;AACA;MACMX,KAAK,EAAE7C,cAAc,CAACD,SAAS,CAAC0D,IAAI,EAAEtB,KAAK,IAAI;QAC7C,IAAIA,KAAK,CAACU,KAAK,IAAIV,KAAK,CAACW,SAAS,EAAE;UAClC,OAAO,IAAIlB,KAAK,CAAC,gEAAgE,CAAC;QACpF;QACA,OAAO,IAAI;MACb,CAAC,CAAC;MACF;AACN;AACA;AACA;MACMkB,SAAS,EAAE/C,SAAS,CAAC,sCAAsC2D,WAAW;MACtE,GAAGpB;IACL,CAAC,GAAG,KAAK,CAAC;IACV,IAAIb,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCY,eAAe,CAACR,WAAW,GAAG,UAAUD,eAAe,GAAG;IAC5D;IACA5B,oBAAoB,CAACqC,eAAe,EAAEvB,SAAS,CAAC;IAChD,OAAOuB,eAAe;EACxB,CAAC;EACD,OAAOtB,gBAAgB;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
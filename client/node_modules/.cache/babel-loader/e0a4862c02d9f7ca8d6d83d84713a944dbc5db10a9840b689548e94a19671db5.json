{"ast":null,"code":"import*as api from\"../API/index.js\";import{AUTH,ERROR,LOGOUT,NOERROR}from\"../constants/actionTypes\";//We use this so it will give an error if we mispell something\nexport const signin=(formData,navigate)=>async dispatch=>{try{// log in the user\nconsole.log(\"Signing in...\");const{data}=await api.signIn(formData);const{result}=data;const{PasswordHash,...safeResult}=result;const safeData={...data,result:safeResult};dispatch({type:AUTH,data});dispatch({type:NOERROR});localStorage.setItem(\"profile\",JSON.stringify(safeData));navigate(\"/\");}catch(error){console.log(error.response.data.message);dispatch({type:ERROR,data:error.response.data.message});}};export const signup=(formData,navigate)=>async dispatch=>{try{// sign up the user\nconsole.log(\"Signing up...\");const{data}=await api.signUp(formData);const{result}=data;const{PasswordHash,...safeResult}=result;const safeData={...data,result:safeResult};dispatch({type:AUTH,data});dispatch({type:NOERROR});localStorage.setItem(\"profile\",JSON.stringify(safeData));navigate(\"/\");}catch(error){console.log(error.response.data.message);dispatch({type:ERROR,data:error.response.data.message});}};export const sign=(result,navigate)=>async dispatch=>{try{// sign up the user\nconst{data}=await api.sign(result);// const { result } = data;\n// const { PasswordHash, ...safeResult } = result;\n// const safeData = { ...data, result: safeResult };\n// console.log(safeUser);\n// { UserID: 1, FullName: \"John Doe\", Email: \"john@example.com\" }\ndispatch({type:AUTH,data});dispatch({type:NOERROR});localStorage.setItem(\"profile\",JSON.stringify(data));navigate(\"/\");}catch(error){console.log(error.response.data.message);dispatch({type:ERROR,data:error.response.data.message});}};export const logout=navigate=>async dispatch=>{try{dispatch({type:LOGOUT});localStorage.clear();navigate(\"/\");}catch(error){console.log(error.response.data.message);dispatch({type:ERROR,data:error.response.data.message});}};","map":{"version":3,"names":["api","AUTH","ERROR","LOGOUT","NOERROR","signin","formData","navigate","dispatch","console","log","data","signIn","result","PasswordHash","safeResult","safeData","type","localStorage","setItem","JSON","stringify","error","response","message","signup","signUp","sign","logout","clear"],"sources":["C:/Users/Owner/FrozenEverydayClient/client/src/actions/auth.js"],"sourcesContent":["import * as api from \"../API/index.js\";\r\nimport { AUTH, ERROR, LOGOUT, NOERROR} from \"../constants/actionTypes\"; //We use this so it will give an error if we mispell something\r\n\r\nexport const signin = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        // log in the user\r\n\r\n        console.log(\"Signing in...\");\r\n        const { data } = await api.signIn(formData);\r\n\r\n        \r\n        const { result } = data;\r\n        const { PasswordHash, ...safeResult } = result;\r\n        const safeData = { ...data, result: safeResult };\r\n\r\n        dispatch({ type: AUTH, data })\r\n        dispatch({ type: NOERROR })\r\n\r\n        localStorage.setItem(\"profile\", JSON.stringify(safeData));\r\n\r\n        navigate(\"/\")\r\n    } catch (error){\r\n        console.log(error.response.data.message)\r\n        dispatch({ type: ERROR, data: error.response.data.message})\r\n    }\r\n}\r\n\r\nexport const signup = (formData, navigate) => async (dispatch) => {\r\n    try {\r\n        // sign up the user\r\n        console.log(\"Signing up...\");\r\n        const { data } = await api.signUp(formData);\r\n\r\n        \r\n        const { result } = data;\r\n        const { PasswordHash, ...safeResult } = result;\r\n        const safeData = { ...data, result: safeResult };\r\n\r\n        dispatch({ type: AUTH, data })\r\n        dispatch({ type: NOERROR });\r\n\r\n        localStorage.setItem(\"profile\", JSON.stringify(safeData));\r\n\r\n        navigate(\"/\")\r\n    } catch (error){\r\n        console.log(error.response.data.message)\r\n        dispatch({ type: ERROR, data: error.response.data.message})\r\n    }\r\n}\r\n\r\nexport const sign = (result, navigate) => async (dispatch) => {\r\n    try {\r\n        // sign up the user\r\n        const { data } = await api.sign(result);\r\n\r\n        // const { result } = data;\r\n        // const { PasswordHash, ...safeResult } = result;\r\n        // const safeData = { ...data, result: safeResult };\r\n\r\n        // console.log(safeUser);\r\n\r\n        // { UserID: 1, FullName: \"John Doe\", Email: \"john@example.com\" }\r\n\r\n\r\n        dispatch({ type: AUTH, data })\r\n        dispatch({ type: NOERROR })\r\n\r\n        localStorage.setItem(\"profile\", JSON.stringify(data));\r\n\r\n        navigate(\"/\")\r\n    } catch (error){\r\n        console.log(error.response.data.message)\r\n        dispatch({ type: ERROR, data: error.response.data.message})\r\n    }\r\n}\r\n\r\nexport const logout = (navigate) => async (dispatch) => {\r\n    try {\r\n        \r\n        dispatch({ type: LOGOUT })\r\n\r\n        localStorage.clear();\r\n\r\n        navigate(\"/\")\r\n    } catch (error){\r\n        console.log(error.response.data.message)\r\n        dispatch({ type: ERROR, data: error.response.data.message})\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
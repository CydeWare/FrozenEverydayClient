{"ast":null,"code":"import*as api from\"../API\";import{UPDATE_CART,FETCH_ALL_CART,FETCH_ALL_CART_BY_USER_ID,DELETE_CART,CREATE_CART}from\"../constants/actionTypes\";//We use this so it will give an error if we mispell something\nexport const getCartItems=()=>async dispatch=>{try{const{data}=await api.getCartItems();console.log(\"Cart Items Fetched\"+data);const action={type:FETCH_ALL_CART,payload:data};dispatch(action);}catch(error){console.log(error.message);}};export const getCartItemsByUserID=userId=>async dispatch=>{try{const{data}=await api.getCartItemsByUserID(userId);console.log(\"Cart Items Fetched\"+data);const action={type:FETCH_ALL_CART_BY_USER_ID,payload:data};dispatch(action);}catch(error){console.log(error.message);}};export const createCartItem=(cartItem,userId)=>async dispatch=>{try{const{data}=await api.createCartItem(cartItem,userId);console.log(\"cartItem TO FIND NAME:\",data);const action={type:CREATE_CART,payload:data};console.log(\"cartItem Created\",data);dispatch(action);}catch(error){console.log(error.response.data);}};export const updateCartItem=(id,cartItem,userId)=>async dispatch=>{try{const{data}=await api.updateCartItem(id,cartItem,userId);dispatch({type:UPDATE_CART,payload:data});}catch(error){console.log(error.message);}};export const deleteCartItem=(id,userId)=>async dispatch=>{try{await api.deleteCartItem(id,userId);console.log(\"cartItem deleted\");dispatch({type:DELETE_CART,payload:id});}catch(error){console.log(error);}};","map":{"version":3,"names":["api","UPDATE_CART","FETCH_ALL_CART","FETCH_ALL_CART_BY_USER_ID","DELETE_CART","CREATE_CART","getCartItems","dispatch","data","console","log","action","type","payload","error","message","getCartItemsByUserID","userId","createCartItem","cartItem","response","updateCartItem","id","deleteCartItem"],"sources":["C:/Users/Owner/FrozenEverydayClient/client/src/actions/cart.js"],"sourcesContent":["import * as api from \"../API\";\r\nimport { UPDATE_CART, FETCH_ALL_CART, FETCH_ALL_CART_BY_USER_ID, DELETE_CART, CREATE_CART } from \"../constants/actionTypes\"; //We use this so it will give an error if we mispell something\r\n\r\nexport const getCartItems = () => async (dispatch) => {\r\n    try {\r\n        \r\n        const { data } = await api.getCartItems();\r\n        console.log(\"Cart Items Fetched\" + data)\r\n\r\n        const action = {\r\n            type: FETCH_ALL_CART,\r\n            payload: data\r\n        }\r\n\r\n        dispatch(action)\r\n    }catch(error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const getCartItemsByUserID = (userId) => async (dispatch) => {\r\n    try {\r\n        \r\n        const { data } = await api.getCartItemsByUserID(userId);\r\n        console.log(\"Cart Items Fetched\" + data)\r\n\r\n        const action = {\r\n            type: FETCH_ALL_CART_BY_USER_ID,\r\n            payload: data\r\n        }\r\n\r\n        dispatch(action)\r\n    }catch(error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createCartItem = (cartItem, userId) => async (dispatch) => {\r\n    try {\r\n        \r\n        const { data } = await api.createCartItem(cartItem, userId);\r\n\r\n        console.log(\"cartItem TO FIND NAME:\", data)\r\n\r\n        const action = {\r\n            type: CREATE_CART,\r\n            payload: data\r\n        }\r\n\r\n        console.log(\"cartItem Created\", data)\r\n\r\n        dispatch(action);\r\n    }catch(error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const updateCartItem = (id, cartItem, userId) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updateCartItem(id, cartItem, userId);\r\n\r\n        dispatch({type: UPDATE_CART, payload: data});\r\n    } catch(error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deleteCartItem = (id, userId) => async (dispatch) => {\r\n    try{\r\n        await api.deleteCartItem(id, userId);\r\n\r\n        console.log(\"cartItem deleted\")\r\n\r\n        dispatch({type: DELETE_CART, payload: id})\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}